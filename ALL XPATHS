//HOME PAGE
SEARCH BOX - "//input[@id='cardekhosearchtext']"
first option in dropdown -- //li[@class='gs_ta_choice active']  or //div[@class='gs_ta_results width100   ']//li[1] or //div[@class='gs_ta_results width100   ']//child::ul/li[1]
SUBMIT BUTTON - "(//button[@type='submit'])[1]"
get text on home page - //h2[text()='The most searched cars'] or auto generated //h2[contains(text(),'The most searched cars')]
Maruti Alto 800 search this

//FIND YOUR RIGHT CAR
USED CAR - //a[@title='New Car']

//
new car tab - //li[@title='New Car']
RADIO BUTTON - (//span[@class='gs_control__indicator'])[4] or //body/div[@id='main']/div[@id='rf01']/div[1]/div[1]/div[1]/div[2]/div[1]/div[2]/div[2]/div[1]/div[2]/label[1]/span[1]

//MOUSE HOVER-(//span[@class='innerSpan'])[1]



//facebook link click - //a[@title='Facebook'] or //span[@class='icon-cd-fb-icon']


(//li[@data-slug='/newcars'])[2]/
//ul[@class='subMenu newSubMenu']/li[1]/span[class(),'innerspan']

SEARCH NEW CAR-//li[@data-slug='/newcars']/span/span[1]



/*@Test(priority = 2)
    public void carSearch() { //partially running
        SoftAssert softAssert = new SoftAssert();
        softAssert.assertEquals(homePage.textOfElement(), "The most searched cars", "Title must match element)");//which line t put and get text element first
        homePage.searchBoxText(prop.getProperty("searchtext"));
    }*/

    @Test  //new created //failed
        public void verifyTextIput() {
            homePage.searchBoxText(prop.getProperty("searchtext"));
        }


/*driver.findElement(By.xpath("//html/body/div[1]/form[1]/input[1]")).sendKeys("TaskOne");
        driver.findElement(By.id("button")).click();

        driver.findElement(By.xpath("//html/body/div[1]/form[1]/input[1]")).sendKeys("TaskTwo");
        driver.findElement(By.id("button")).click();

        driver.findElement(By.xpath("//html/body/div[1]/form[1]/input[1]")).sendKeys("TaskThree");
        driver.findElement(By.id("button")).click();

        WebElement act = driver.findElement(By.xpath("/html/body/div/ol/li[2]"));

        Actions actions = new Actions(driver);
        actions.doubleClick(act).build().perform();*/


        /* public Boolean selectRadioButton()
            {
                return TestUtils.elementIsSelected(byModelRadioButton);
            }*/

            /* @Test(priority = 2)
                public void verifyRadioButtonSelection() {    //passsing YESTERDAY
                    SoftAssert softAssert = new SoftAssert();
                    softAssert.assertTrue(homePage.selectRadioButton(),  "Radio Button Should Be Selected");
                    softAssert.assertAll();
                    // homePage.clickRadioBtn();//homePage.searchBoxText("Maruti Alto 800");
                }*/

               /* @Test(priority = 1)
                public void verifyTextInput() {                             //action performed succesfully but failing
                homePage.searchBoxText(prop.getProperty("searchtext"));
                }*/


                //title[conatins(text(),'New Maruti Alto 800 Price 2023, Images, Colours & ')]
                //title[contains(text(),'New Maruti Alto 800 Price 2023, Images, Colours & Reviews')]


//utils
 public static String getTextOfSearch(WebElement search) {
        return search.getText();
    }//homepage

    ///page

      @FindBy(xpath = "//h1[text()='Maruti Alto 800']")
        WebElement productName;

     public String textOfSearch()
        {
            return TestUtils.getTextOfSearch(productName);
        }


        /title

        @FindBy(xpath = "//title[contains(text(),'New Maruti Alto 800 Price 2023, Images, Colours & Reviews')]")
            WebElement titleName;

////softAssert.assertEquals(homePage.getTextOfPage(), "New Maruti Alto 800 Price 2023, Images, Colours & Reviews", "Title must match element)");//which line t put and get text element first